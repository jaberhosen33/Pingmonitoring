@model List<WebApplication2.Models.Outlet>

@{
    ViewData["Title"] = "Ping Monitor";
    var searchTerm = Context.Request.Query["searchTerm"];
}

<h2 class="mb-4 fw-bold text-success">
    <i class="fas fa-network-wired me-2"></i>Ping Monitor
</h2>

<div class="row g-3 mb-4">
    <!-- Search -->
    <div class="col-lg-4 col-md-6">
        <div class="input-group shadow-sm">
            <span class="input-group-text bg-light"><i class="fas fa-search"></i></span>
            <input type="text" id="searchInput" name="searchTerm" class="form-control"
                   placeholder="Search by Outlet Name or Code..."
                   value="@searchTerm" autocomplete="off" />
        </div>
    </div>

    <!-- Check Connections -->
    <div class="col-lg-4 col-md-6 d-flex align-items-center">
        <form method="post" asp-action="CheckConnections" id="checkConnectionsForm" class="w-100">
            <button type="submit" class="btn btn-primary w-50 shadow-sm">
                <i class="fas fa-plug me-2"></i>Check All Connections
            </button>
        </form>
    </div>

    <!-- Status Filters -->
    <div class="col-lg-4 col-md-12 d-flex justify-content-lg-end gap-3">
        <button class="btn btn-info position-relative"
                onclick="location.href='@Url.Action("Index", new { filter = "all" })'">
            ALL
            <span class="position-absolute top-0 start-100 translate-middle badge bg-danger">
                @ViewData["Alloutlets"]
            </span>
        </button>
        <button class="btn btn-success position-relative"
                onclick="location.href='@Url.Action("Index", new { filter = "good" })'">
            Linked Up
            <span class="position-absolute top-0 start-100 translate-middle badge bg-danger">
                @ViewData["Uplink"]
            </span>
        </button>
        <button class="btn btn-warning position-relative"
                onclick="location.href='@Url.Action("Index", new { filter = "highping" })'">
            High Ping
            <span class="position-absolute top-0 start-100 translate-middle badge bg-dark">
                @ViewData["HighPing"]
            </span>
        </button>
        <button class="btn btn-danger position-relative"
                onclick="location.href='@Url.Action("Index", new { filter = "lost" })'">
            Disconnected
            <span class="position-absolute top-0 start-100 translate-middle badge bg-warning text-dark">
                @ViewData["TotalDown"]
            </span>
        </button>
    </div>
</div>

<form asp-controller="Report" asp-action="ExportPdf" method="get" class="row g-3 align-items-center mb-4" id="downloadForm">
    <div class="col-md-4">
        <select id="ispSelect" name="isp" class="form-select shadow-sm">
            <option value="">-- Select ISP --</option>
            <option value="all">ALL</option>
            <option value="CCL">CCL</option>
            <option value="ADN">ADN</option>
            <option value="Amber">Amber</option>
            <option value="Agni">Agni</option>
            <option value="Drick">Drick</option>
            <option value="Circle">Circle</option>
        </select>
    </div>
    <div class="col-md-4">
        <button type="submit" class="btn btn-outline-primary shadow-sm">
            <i class="fas fa-file-download me-2"></i>Download Down Reports
        </button>
    </div>
</form>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="text-center mb-3" style="display: none;">
    <div class="spinner-border text-primary" role="status"></div>
    <p class="mt-2 text-muted">Checking connections...</p>
</div>

<!-- Table -->
<div class="table-responsive shadow-sm rounded">
    <table class="table table-hover align-middle">
        <thead class="table-dark sticky-top">
            <tr>
                <th>Outlet Code</th>
                <th>Outlet Name</th>
                <th>IP Address</th>
                <th>ISP</th>
                <th>Phone</th>
                <th>Status</th>
                <th>Last Checked</th>
                <th>Duration</th>
            </tr>
        </thead>
        <tbody id="outletTableBody">
            @foreach (var item in Model)
            {
                <tr>
                    <td class="fw-bold">@item.OutletCode</td>
                    <td>@item.OutletName</td>
                    <td>
                        <span id="ip-@item.Id">@item.IpAddress</span>
                        <i id="copy-icon-@item.Id"
                           class="fas fa-copy text-success ms-2"
                           style="cursor: pointer;"
                           onclick="copyToClipboard('ip-@item.Id', 'copy-icon-@item.Id')"
                           title="Copy to clipboard"></i>
                    </td>
                    <td>@item.ISPName</td>
                    <td>@item.ISPPhone</td>
                    <td>
                        @if (item.LastPingStatus == "Connection Lost")
                        {
                            <span class="badge bg-danger animate__animated animate__flash">@item.LastPingStatus</span>
                        }
                        else if (item.LastPingStatus == "High Ping")
                        {
                            <span class="badge bg-warning text-dark">@item.LastPingStatus</span>
                        }
                        else
                        {
                            <span class="badge bg-success">@item.LastPingStatus</span>
                        }
                    </td>
                    <td>@(item.LastPingTime?.ToString("g") ?? "Never")</td>
                    @{
                        DateTime now = DateTime.Now;
                        DateTime? lastPing = item.LastPingTime;
                        TimeSpan? duration = lastPing.HasValue ? now - lastPing.Value : (TimeSpan?)null;
                    }
                    <td>
                        @(duration.HasValue ? $"{duration.Value.Days}d {duration.Value.Hours}h {duration.Value.Minutes}m ago" : "Never")
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        // Auto check every 100 sec
        setInterval(checkConnectionsAndReload, 100000);

        async function checkConnectionsAndReload() {
            document.getElementById("loadingSpinner").style.display = "block";
            await fetch('@Url.Action("CheckConnections", "Home")', { method: 'POST' });
            location.reload();
        }

        document.getElementById("checkConnectionsForm").addEventListener("submit", function () {
            document.getElementById("loadingSpinner").style.display = "block";
        });

        function copyToClipboard(elementId, iconId) {
            var textElement = document.getElementById(elementId);
            var iconElement = document.getElementById(iconId);

            if (!textElement || !iconElement) return;

            var text = textElement.innerText || textElement.textContent;

            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(text).then(() => {
                    iconElement.className = "fas fa-check text-primary";
                    iconElement.title = "Copied!";
                    setTimeout(() => {
                        iconElement.className = "fas fa-copy text-success ms-2";
                        iconElement.title = "Copy to clipboard";
                    }, 1500);
                }).catch(err => {
                    alert("Failed to copy: " + err);
                });
            } else {
                try {
                    const textarea = document.createElement("textarea");
                    textarea.value = text;
                    textarea.style.position = "fixed";
                    document.body.appendChild(textarea);
                    textarea.focus();
                    textarea.select();
                    if (document.execCommand("copy")) {
                        iconElement.className = "fas fa-check text-primary";
                        iconElement.title = "Copied!";
                        setTimeout(() => {
                            iconElement.className = "fas fa-copy text-success ms-2";
                            iconElement.title = "Copy to clipboard";
                        }, 1500);
                    } else {
                        alert("Copy command failed");
                    }
                    document.body.removeChild(textarea);
                } catch (err) {
                    alert("Failed to copy: " + err);
                }
            }
        }

        // 🚀 Improved Search Filter (Fast, Debounced, Cached)
        const searchInput = document.getElementById("searchInput");
        const rows = Array.from(document.querySelectorAll("#outletTableBody tr"));

        // Cache text content (Outlet Code + Name + IP + ISP)
        const rowCache = rows.map(row => {
            const cells = row.querySelectorAll("td");
            return {
                element: row,
                text: (cells[0].textContent + " " + cells[1].textContent + " " + cells[2].textContent + " " + cells[3].textContent).toLowerCase()
            };
        });

        let debounceTimer;
        searchInput.addEventListener("input", function () {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                const filter = searchInput.value.trim().toLowerCase();
                rowCache.forEach(row => {
                    row.element.style.display = row.text.includes(filter) ? "" : "none";
                });
            }, 300); // 300ms delay
        });

        // Validate ISP before download
        document.getElementById("downloadForm").addEventListener("submit", function (event) {
            var ispSelect = document.getElementById("ispSelect");
            if (!ispSelect.value) {
                event.preventDefault();
                alert("Please select an ISP before downloading the report.");
                ispSelect.focus();
            }
        });
    </script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
}
